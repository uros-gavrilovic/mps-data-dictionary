package MpsLanguage.actions;

/*Generated by MPS */

import jetbrains.mps.openapi.actions.descriptor.NodeFactory;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.model.SModel;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SConceptOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SReferenceLink;

public class CreateStructureOnCreateSemanticDomain {
  public static class NodeFactory_3975302705258943495 implements NodeFactory {
    public void setup(SNode newNode, SNode sampleNode, SNode enclosingNode, int index, SModel model) {
      SNode fieldDefinition = (SNode) enclosingNode;
      SNode structureDefintion = (SNode) SNodeOperations.getParent(fieldDefinition);
      SNode dataDictionary = (SNode) SNodeOperations.getParent(structureDefintion);

      SNode newStructureDefintion = SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf06cb947e5a84701L, 0x9c0629d6e3bd07f9L, 0x21b0e207472b2358L, "MpsLanguage.structure.StructureDefinition"));
      SLinkOperations.setTarget(newStructureDefintion, LINKS.structure$WKMy, SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getInterfaceConcept(0xf06cb947e5a84701L, 0x9c0629d6e3bd07f9L, 0x21b0e207472b2360L, "MpsLanguage.structure.IAbstractStructure"))));
      SLinkOperations.setTarget(newNode, LINKS.structure$Skfs, newStructureDefintion);

      ListSequence.fromList(SLinkOperations.getChildren(dataDictionary, LINKS.structures$Wxxz)).addElement(newStructureDefintion);
    }
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink structure$WKMy = MetaAdapterFactory.getContainmentLink(0xf06cb947e5a84701L, 0x9c0629d6e3bd07f9L, 0x21b0e207472b2358L, 0x21b0e207472b2370L, "structure");
    /*package*/ static final SReferenceLink structure$Skfs = MetaAdapterFactory.getReferenceLink(0xf06cb947e5a84701L, 0x9c0629d6e3bd07f9L, 0x372b1cbf957724aaL, 0x372b1cbf95a07e0bL, "structure");
    /*package*/ static final SContainmentLink structures$Wxxz = MetaAdapterFactory.getContainmentLink(0xf06cb947e5a84701L, 0x9c0629d6e3bd07f9L, 0x21b0e207472b2356L, 0x21b0e207472b2359L, "structures");
  }
}
