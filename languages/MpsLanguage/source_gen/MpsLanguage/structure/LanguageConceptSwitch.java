package MpsLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Aggregation = 0;
  public static final int Boolean = 1;
  public static final int Constraint = 2;
  public static final int DataDictionary = 3;
  public static final int Double = 4;
  public static final int ExclusiveSpecialization = 5;
  public static final int Field = 6;
  public static final int FieldDefinition = 7;
  public static final int IAbstractDomain = 8;
  public static final int IAbstractElement = 9;
  public static final int IAbstractSpecialization = 10;
  public static final int IAbstractStructure = 11;
  public static final int Integer = 12;
  public static final int NonExclusiveSpecialization = 13;
  public static final int PredefinedDomain = 14;
  public static final int SemanticDomain = 15;
  public static final int String = 16;
  public static final int StructureDefinition = 17;
  public static final int Union = 18;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xf06cb947e5a84701L, 0x9c0629d6e3bd07f9L);
    builder.put(0x21b0e207472b2373L, Aggregation);
    builder.put(0x21b0e207472b23c2L, Boolean);
    builder.put(0x21b0e207472b23b2L, Constraint);
    builder.put(0x21b0e207472b2356L, DataDictionary);
    builder.put(0x21b0e207472b23bdL, Double);
    builder.put(0x21b0e207472b237cL, ExclusiveSpecialization);
    builder.put(0x21b0e207472b23c4L, Field);
    builder.put(0x21b0e207472b2391L, FieldDefinition);
    builder.put(0x372b1cbf957724a9L, IAbstractDomain);
    builder.put(0x21b0e207472b2362L, IAbstractElement);
    builder.put(0x21b0e207472b2377L, IAbstractSpecialization);
    builder.put(0x21b0e207472b2360L, IAbstractStructure);
    builder.put(0x21b0e207472b23bbL, Integer);
    builder.put(0x21b0e207472b2380L, NonExclusiveSpecialization);
    builder.put(0x372b1cbf957724adL, PredefinedDomain);
    builder.put(0x372b1cbf957724aaL, SemanticDomain);
    builder.put(0x21b0e207472b23bfL, String);
    builder.put(0x21b0e207472b2358L, StructureDefinition);
    builder.put(0x21b0e207472b238aL, Union);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
